{"version":3,"sources":["../../src/utils.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["options","MAPPING","className","htmlFor","onMathFieldFocus","onMathFieldBlur","MathView","_ref","useRef","useImperativeHandle","ref","value","useMemo","props","renderToString","config","passProps","key","React","filterConfig","configRef","useLayoutEffect","isEqual","useUpdateOptions","useEffect","onFocus","onBlur","onChange","undefined","dispatchEvent","useCallback","handler","valueSetter","Object","prototype","prototypeValueSetter","detail","CustomEvent","type","bubbles","cancelable","useEventDispatchRef","onContentDidChange","sender","mathfield","hidden","_input","MathWithKeyboard","current","executeCommand","console","log","caretPoint","getValue","e","nativeEvent","MathWithKeyboardButton","target","onClick","style","width","marginTop","xmlns","viewBox","d","ControlledMathView","useState","setValue","App","k","setK","setTimeout","virtualKeyboardMode","onKeystroke","event","onMoveOutOf","direction","onTabOutOf","onLoad","onVirtualKeyboardToggle","visible","keyboard","onContentWillChange","onSelectionWillChange","onSelectionDidChange","onUndoStateWillChange","action","onUndoStateDidChange","onCommit","onModeChange","mode","onReadAloudStatus","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35b92fc9.chunk.js","sourcesContent":["import isEqual from 'lodash.isequal';\r\nimport { MathfieldConfig } from \"mathlive\";\r\nimport React, { useCallback, useLayoutEffect, useRef } from \"react\";\r\nimport { renderToString } from \"react-dom/server\";\r\nimport { MathViewProps, MathViewRef } from \"./types\";\r\n\r\nexport const options: Array<keyof MathfieldConfig> = [\r\n  \"createHTML\",\r\n  \"customVirtualKeyboardLayers\",\r\n  \"customVirtualKeyboards\",\r\n  \"defaultMode\",\r\n  \"fontsDirectory\",\r\n  \"horizontalSpacingScale\",\r\n  \"ignoreSpacebarInMathMode\",\r\n  \"inlineShortcutTimeout\",\r\n  \"inlineShortcuts\",\r\n  \"keybindings\",\r\n  \"keypressSound\",\r\n  \"keypressVibration\",\r\n  \"letterShapeStyle\",\r\n  \"locale\",\r\n  \"macros\",\r\n  \"namespace\",\r\n  \"onBlur\",\r\n  \"onCommit\",\r\n  \"onContentDidChange\",\r\n  \"onContentWillChange\",\r\n  \"onError\",\r\n  \"onFocus\",\r\n  \"onKeystroke\",\r\n  \"onModeChange\",\r\n  \"onMoveOutOf\",\r\n  \"onReadAloudStatus\",\r\n  \"onSelectionDidChange\",\r\n  \"onSelectionWillChange\",\r\n  \"onTabOutOf\",\r\n  \"onUndoStateDidChange\",\r\n  \"onUndoStateWillChange\",\r\n  \"onVirtualKeyboardToggle\",\r\n  \"overrideDefaultInlineShortcuts\",\r\n  \"plonkSound\",\r\n  \"readAloudHook\",\r\n  \"readOnly\",\r\n  \"removeExtraneousParentheses\",\r\n  \"scriptDepth\",\r\n  \"smartFence\",\r\n  \"smartMode\",\r\n  \"smartSuperscript\",\r\n  \"speakHook\",\r\n  \"speechEngine\",\r\n  \"speechEngineRate\",\r\n  \"speechEngineVoice\",\r\n  \"strings\",\r\n  \"substituteTextArea\",\r\n  \"textToSpeechMarkup\",\r\n  \"textToSpeechRules\",\r\n  \"textToSpeechRulesOptions\",\r\n  \"virtualKeyboardLayout\",\r\n  \"virtualKeyboardMode\",\r\n  \"virtualKeyboardTheme\",\r\n  \"virtualKeyboardToggleGlyph\",\r\n  \"virtualKeyboards\",\r\n];\r\n\r\nconst MAPPING = {\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  onMathFieldFocus: 'onFocus',\r\n  onMathFieldBlur: 'onBlur'\r\n};\r\n\r\nexport function filterConfig(props: MathViewProps) {\r\n  const config: Partial<MathfieldConfig> = {};\r\n  const passProps: MathViewProps = {};\r\n  for (const _key in props) {\r\n    const key = MAPPING[_key] || _key;\r\n    let value = props[_key];\r\n    if (options.indexOf(key) > -1) {\r\n      if (React.isValidElement(value) || (value instanceof Array && value.every(React.isValidElement))) {\r\n        value = renderToString(value as React.ReactElement);\r\n      }\r\n      config[key] = value;\r\n    } else {\r\n      passProps[key] = value;\r\n    }\r\n  }\r\n  return [config, passProps] as [typeof config, typeof passProps];\r\n}\r\n\r\n/**\r\n * This hook is used to prevent the loss of caret position upon rendering (setting options causes what seems to be a full reset of Mathfield).\r\n * When an update was passed to the component the effect deemed the new config dep !== previous config dep, hence invoking `setOptions` and losing caret.\r\n * This solution will update options only if they have changed is comparison to the previous values (not object containing them), avoiding uncessary rendering.\r\n * \r\n * !! The issue of losing caret when using `setOptions` consists. !!\r\n * \r\n * @param ref \r\n * @param config \r\n */\r\nexport function useUpdateOptions(ref: React.RefObject<MathViewRef>, config: Partial<MathfieldConfig>) {\r\n  const configRef = useRef(config);\r\n  useLayoutEffect(() => {\r\n    if (!isEqual(configRef.current, config)) {\r\n      ref.current?.setOptions(config);\r\n      configRef.current = config;\r\n    }\r\n  }, [ref, config, configRef]);\r\n}\r\n\r\n/**\r\n * @deprecated Events don't fire for some reason. Probably becasue mathfield resides in a shadow node.\r\n * https://github.com/facebook/react/issues/7901\r\n * @param node \r\n * @param props \r\n */\r\nexport function handleEventRegistration(node: HTMLElement, props: MathViewProps) {\r\n  const fns: { key: string, fn: (customEvent: any) => any }[] = Object.keys(props)\r\n    .filter(key => typeof props[key] === 'function' && key.startsWith('on'))\r\n    .map(key => ({\r\n      key: MAPPING[key] || key,\r\n      fn: (...args: any[]) => { props[key](...args) },\r\n    }));\r\n\r\n  fns.forEach(({ key, fn }) => {\r\n    node.addEventListener(key, fn);\r\n  });\r\n\r\n  return () => {\r\n    fns.forEach(({ key, fn }) =>\r\n      node.removeEventListener(key, fn),\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * This hook enables change events to propagate to react\r\n * https://stackoverflow.com/questions/23892547/what-is-the-best-way-to-trigger-onchange-event-in-react-js#46012210\r\n * https://github.com/facebook/react/issues/11488\r\n * https://stackoverflow.com/a/62111884/9068029\r\n */\r\nexport function useEventDispatchRef() {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n  const dispatchEvent = useCallback((type: string, detail: { value: string, [key: string]: any }) => {\r\n    const handler = ref.current;\r\n    if (!handler) return;\r\n    const valueSetter = Object.getOwnPropertyDescriptor(handler, 'value')!.set!;\r\n    const prototype = Object.getPrototypeOf(handler);\r\n    const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, 'value')!.set!;\r\n    if (valueSetter && valueSetter !== prototypeValueSetter) {\r\n      prototypeValueSetter.call(handler, detail.value);\r\n    } else {\r\n      valueSetter.call(handler, detail.value);\r\n    }\r\n    handler.dispatchEvent(new CustomEvent(type, { bubbles: true, cancelable: true, detail }));\r\n  }, [ref]);\r\n\r\n  return [ref, dispatchEvent] as [typeof ref, typeof dispatchEvent];\r\n}","import { Mathfield, MathfieldElement } from 'mathlive';\r\nimport 'mathlive/dist/mathlive-fonts.css';\r\nimport 'mathlive/dist/mathlive.min';\r\nimport React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { renderToString } from 'react-dom/server';\r\nimport { MathViewProps } from './types';\r\nimport { filterConfig, useEventDispatchRef, useUpdateOptions } from './utils';\r\n\r\nconst MathView = React.forwardRef<MathfieldElement, MathViewProps>((props, ref) => {\r\n  const _ref = useRef<MathfieldElement>(null);\r\n  useImperativeHandle(ref, () => _ref.current!, [_ref]);\r\n\r\n  const value = useMemo(() =>\r\n    props.children ?\r\n      renderToString(props.children as React.ReactElement)! :\r\n      props.value || \"\",\r\n    [props.children, props.value]\r\n  );\r\n  const [config, passProps] = useMemo(() => filterConfig(props), [props]);\r\n  useUpdateOptions(_ref, config);\r\n  useEffect(() => {\r\n    _ref.current?.setValue(value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <math-field\r\n      {...passProps}\r\n      onFocus={props.onFocus}\r\n      onBlur={props.onBlur}\r\n      onChange={undefined}\r\n      ref={_ref}\r\n    >\r\n    </math-field>\r\n  );\r\n});\r\n\r\n/**\r\n * This Component uses <input> and {useEventDispatchRef} as a workaround for bubbling change events to react\r\n * Motivation: 'onChange' is a must have in react, it is the basics of state handling\r\n * It fires an event from {onContentDidChange}\r\n */\r\nconst MathViewWrapper = React.forwardRef<MathfieldElement, MathViewProps>((props, ref) => {\r\n  const [_input, dispatchEvent] = useEventDispatchRef();\r\n  const onContentDidChange = useCallback((sender: Mathfield) => {\r\n    props.onContentDidChange && props.onContentDidChange(sender);\r\n    dispatchEvent('change', { value: sender.getValue(), mathfield: sender });\r\n  }, [props.onContentDidChange]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <input hidden ref={_input} onChange={props.onChange as any} />\r\n      <MathView\r\n        {...props}\r\n        ref={ref}\r\n        onContentDidChange={onContentDidChange}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n})\r\n\r\nexport * from './types';\r\nexport default MathViewWrapper;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport MathView, { MathChangeEvent, MathViewProps, MathViewRef } from 'react-math-view';\r\n\r\nconst MathWithKeyboard = (props: MathViewProps) => {\r\n  const ref = useRef<MathViewRef>(null);\r\n  return <MathView\r\n    ref={ref}\r\n    onFocus={() => {\r\n      ref.current?.executeCommand('showVirtualKeyboard');\r\n    }}\r\n    onBlur={() => {\r\n      console.log('caret', ref.current?.caretPoint);\r\n      console.log('value', ref.current?.getValue('spoken'), ref.current?.getValue('latex'));\r\n      ref.current?.executeCommand('hideVirtualKeyboard')\r\n    }}\r\n    onChange={e => console.log('onChange', e.nativeEvent)}\r\n    {...props}\r\n  />\r\n}\r\n\r\nconst MathWithKeyboardButton = (props: MathViewProps) => {\r\n  const ref = useRef<MathViewRef>(null);\r\n  return (\r\n    <div className=\"inline\">\r\n      <MathView\r\n        onChange={e => console.log('change', e.target)}\r\n        className=\"f1\"\r\n        ref={ref}\r\n        onBlur={() => {\r\n          console.log('caret', ref.current?.caretPoint);\r\n          console.log('value', ref.current?.getValue('spoken'), ref.current?.getValue('latex'));\r\n        }}\r\n        {...props}\r\n      />\r\n      <span onClick={() => ref.current?.executeCommand('toggleVirtualKeyboard')} style={{ width: '21px', marginTop: '4px' }}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"></path></svg></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ControlledMathView = (props: MathViewProps) => {\r\n  const [value, setValue] = useState(props.value || \"$$d=\\\\sqrt[]{x^2+y^2}$$\");\r\n  const onChange = useCallback((e: MathChangeEvent) => {\r\n    console.log('ControlledMathView onChange', e)\r\n    setValue(e.nativeEvent.detail.value);\r\n  }, [setValue]);\r\n\r\n  return (\r\n    <MathView\r\n      {...props}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(\"\\\\beta\");\r\n  const [k, setK] = useState<\"off\" | \"auto\" | \"manual\" | \"onfocus\" | undefined>(\"off\");\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setValue(\"a^2+b^2=c^2\");\r\n      setK(\"onfocus\");\r\n    }, 1500);\r\n  })\r\n  return <div>\r\n    <ControlledMathView\r\n      // /virtualKeyboardTheme=\"material\"\r\n      virtualKeyboardMode=\"onfocus\"\r\n      onKeystroke={(sender, key, event) => {\r\n        console.log('onKeystroke', { sender, key, event });\r\n        return true;\r\n      }}\r\n      onMoveOutOf={(sender, direction) => {\r\n        console.log('onMoveOutOf', { sender, direction });\r\n        return true;\r\n      }}\r\n      onTabOutOf={(sender, direction) => {\r\n        console.log('onTabOutOf', { sender, direction });\r\n        return false;\r\n      }}\r\n      onLoad={(e) => console.log('onLoad', e)}\r\n      onFocus={(e) => console.log('onFocus', e)}\r\n      onBlur={(e) => console.log('onBlur', e)}\r\n      onVirtualKeyboardToggle={(sender, visible, keyboard) => console.log('onVirtualKeyboardToggle', { sender, visible, keyboard })}\r\n      onMathFieldFocus={(sender) => console.log('onMathFieldFocus', sender)}\r\n      onMathFieldBlur={(sender) => console.log('onMathFieldBlur', sender)}\r\n      onContentWillChange={(sender) => console.log('onContentWillChange', sender)}\r\n      onContentDidChange={(sender) => console.log('onContentDidChange', sender)}\r\n      onSelectionWillChange={(sender) => console.log('onSelectionWillChange', sender)}\r\n      onSelectionDidChange={(sender) => console.log('onSelectionDidChange', sender)}\r\n      onUndoStateWillChange={(target, action) => console.log('onUndoStateWillChange', { target, action })}\r\n      onUndoStateDidChange={(target, action) => console.log('onUndoStateDidChange', { target, action })}\r\n      onCommit={(sender) => console.log('onCommit', sender)}\r\n      onModeChange={(sender, mode) => console.log('onModeChange', sender, mode)}\r\n      onReadAloudStatus={(sender) => console.log('onReadAloudStatus', sender)}\r\n      onChange={e => console.log('onChange', e.nativeEvent)}\r\n    >\r\n      \\alpha\r\n      </ControlledMathView>\r\n    <MathWithKeyboard value={value} />\r\n    <MathView virtualKeyboardMode={k} className=\"red\">{value}</MathView>\r\n    <p>\r\n      <MathWithKeyboard style={{ backgroundColor: 'blueviolet' }} value=\"\\gamma\" />\r\n      <MathWithKeyboard value=\"\\delta\" />\r\n    </p>\r\n\r\n    <ControlledMathView virtualKeyboardMode=\"onfocus\" onCommit={(sender) => console.log('onCommit', sender)} />\r\n    <MathWithKeyboardButton>{\"x=\\\\frac{-b\\\\pm\\\\sqrt{b ^ 2 - 4ac}}{2a}\"}</MathWithKeyboardButton>\r\n\r\n  </div>\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}