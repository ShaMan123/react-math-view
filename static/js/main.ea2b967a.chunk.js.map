{"version":3,"sources":["../../src/utils.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["OPTIONS","FUNCTION_MAPPING","onChange","onInput","onMathFieldFocus","onMathFieldBlur","onCommit","onError","onKeystroke","onModeChange","onMoveOutOf","onReadAloudStatus","onSelectionWillChange","onUndoStateDidChange","onUndoStateWillChange","onVirtualKeyboardToggle","FUNCTION_PROPS","Object","MAPPING","className","htmlFor","useControlledConfig","value","onContentWillChange","onContentDidChange","props","position","useRef","_value","_onContentWillChange","useCallback","p","sender","_onContentDidChange","useEffect","_ref","useImperativeHandle","ref","useMemo","renderToString","useValue","config","passProps","key","React","filterConfig","transformedConfig","node","fns","fn","useEventRegistration","configRef","useLayoutEffect","isEqual","useUpdateOptions","onFocus","onBlur","undefined","MathWithKeyboard","memo","current","executeCommand","console","log","caretPoint","getValue","e","nativeEvent","MathWithKeyboardButton","target","onClick","style","width","marginTop","xmlns","viewBox","d","ControlledMathView","useState","setValue","currentTarget","GithubButtons","top","right","margin","src","frameBorder","scrolling","title","height","App","k","setK","setTimeout","virtualKeyboardMode","event","direction","onTabOutOf","onLoad","visible","keyboard","onSelectionDidChange","action","mode","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea2b967a.chunk.js","sourcesContent":["import isEqual from 'lodash.isequal';\r\nimport { MathfieldConfig } from \"mathlive\";\r\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef } from \"react\";\r\nimport { renderToString } from \"react-dom/server\";\r\nimport { MathViewProps, MathViewRef } from \"./types\";\r\n\r\nexport const OPTIONS: Array<keyof MathfieldConfig> = [\r\n  'backgroundColorMap',\r\n  'backgroundColorMap',\r\n  'createHTML',\r\n  'customVirtualKeyboardLayers',\r\n  'customVirtualKeyboards',\r\n  'defaultMode',\r\n  'fontsDirectory',\r\n  'horizontalSpacingScale',\r\n  'inlineShortcutTimeout',\r\n  'inlineShortcuts',\r\n  'keybindings',\r\n  'keypressSound',\r\n  'keypressVibration',\r\n  'letterShapeStyle',\r\n  'locale',\r\n  'macros',\r\n  'mathModeSpace',\r\n  'onBlur',\r\n  'onCommit',\r\n  'onContentDidChange',\r\n  'onContentWillChange',\r\n  'onError',\r\n  'onExport',\r\n  'onFocus',\r\n  'onKeystroke',\r\n  'onModeChange',\r\n  'onMoveOutOf',\r\n  'onPlaceholderDidChange',\r\n  'onReadAloudStatus',\r\n  'onSelectionDidChange',\r\n  'onSelectionWillChange',\r\n  'onTabOutOf',\r\n  'onUndoStateDidChange',\r\n  'onUndoStateWillChange',\r\n  'originValidator',\r\n  'plonkSound',\r\n  'readAloudHook',\r\n  'readOnly',\r\n  'registers',\r\n  'removeExtraneousParentheses',\r\n  'scriptDepth',\r\n  'sharedVirtualKeyboardTargetOrigin',\r\n  'smartFence',\r\n  'smartMode',\r\n  'smartSuperscript',\r\n  'soundsDirectory',\r\n  'speakHook',\r\n  'speechEngine',\r\n  'speechEngineRate',\r\n  'speechEngineVoice',\r\n  'strings',\r\n  'textToSpeechMarkup',\r\n  'textToSpeechRules',\r\n  'textToSpeechRulesOptions',\r\n  'useSharedVirtualKeyboard',\r\n  'virtualKeyboardContainer',\r\n  'virtualKeyboardLayout',\r\n  'virtualKeyboardMode',\r\n  'virtualKeyboardTheme',\r\n  'virtualKeyboardToggleGlyph',\r\n  'virtualKeyboardToolbar',\r\n  'virtualKeyboards',\r\n];\r\n\r\n/**\r\n * mount/unmount are unhandled\r\n */\r\nconst FUNCTION_MAPPING = {\r\n  /**retargeting onChange to fire input events to match react expected behavior */\r\n  onChange: 'input',\r\n  onInput: 'input',\r\n  /**rename onFocus to prevent name collision */\r\n  onMathFieldFocus: 'focus',\r\n  /**rename onBlur to prevent name collision */\r\n  onMathFieldBlur: 'blur',\r\n  onCommit: 'change',\r\n  //onContentDidChange,\r\n  //onContentWillChange,\r\n  onError: 'math-error',\r\n  onKeystroke: 'keystroke',\r\n  onModeChange: 'mode-change',\r\n  onMoveOutOf: 'focus-out',\r\n  onReadAloudStatus: 'read-aloud-status',\r\n  //onSelectionDidChange: 'selection-did-change',\r\n  onSelectionWillChange: 'selection-will-change',\r\n  //onTabOutOf,\r\n  onUndoStateDidChange: 'undo-state-did-change',\r\n  onUndoStateWillChange: 'undo-state-will-change',\r\n  onVirtualKeyboardToggle: 'virtual-keyboard-toggle',\r\n};\r\n\r\nconst FUNCTION_PROPS = Object.keys(FUNCTION_MAPPING);\r\n\r\nconst MAPPING = {\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n};\r\n\r\nexport function useValue(props: MathViewProps, ref: React.RefObject<MathViewRef>) {\r\n  const value = useMemo(() =>\r\n    props.children ?\r\n      renderToString(props.children as React.ReactElement)! :\r\n      props.value || \"\",\r\n    [props.children, props.value]\r\n  );\r\n  useEffect(() => {\r\n    ref.current?.setValue(value);\r\n  }, [value]);\r\n\r\n  return value;\r\n}\r\n\r\nexport function filterConfig(props: MathViewProps) {\r\n  const config: Partial<MathfieldConfig> = {};\r\n  const passProps: MathViewProps = {};\r\n  for (const _key in props) {\r\n    const key = MAPPING[_key] || _key;\r\n    let value = props[_key];\r\n    if (FUNCTION_PROPS.indexOf(key) > -1) {\r\n      //  handled by attaching event listeners\r\n    } else if (OPTIONS.indexOf(key) > -1) {\r\n      if (React.isValidElement(value) || (value instanceof Array && value.every(React.isValidElement))) {\r\n        value = renderToString(value as React.ReactElement);\r\n      }\r\n      config[key] = value;\r\n    } else if (key !== 'value') {\r\n      passProps[key] = value;\r\n    }\r\n  }\r\n  return [config, passProps] as [typeof config, typeof passProps];\r\n}\r\n\r\n/**\r\n * Mathfield resets caret position when value is set imperatively (not while editing).\r\n * This is why we need to set caret position for controlled math view after value has been changed.\r\n */\r\nexport function useControlledConfig(value: string, { onContentWillChange, onContentDidChange, ...props }: ReturnType<typeof filterConfig>[0]) {\r\n  const position = useRef<{ x: number, y: number } | null>(null);\r\n  const _value = useRef<string>(value || '');\r\n  //  save caret position if necessary\r\n  const _onContentWillChange = useCallback<MathfieldConfig['onContentWillChange']>((sender) => {\r\n    const p = _value.current !== value && sender.getCaretPoint && sender.getCaretPoint();\r\n    p && (position.current = p);\r\n    onContentWillChange && onContentWillChange(sender);\r\n  }, [onContentWillChange, value]);\r\n  //  set caret position if necessary\r\n  const _onContentDidChange = useCallback<MathfieldConfig['onContentDidChange']>((sender) => {\r\n    position.current && sender.setCaretPoint(position.current.x, position.current.y);\r\n    onContentDidChange && onContentDidChange(sender)\r\n  }, [onContentDidChange]);\r\n  //  update _value\r\n  useEffect(() => {\r\n    _value.current = value || '';\r\n  }, [value]);\r\n  return {\r\n    ...props,\r\n    onContentWillChange: _onContentWillChange,\r\n    onContentDidChange: _onContentDidChange\r\n  }\r\n}\r\n\r\n/**\r\n * Performance Optimization\r\n * ------------------------\r\n * This hook memoizes config in order to prevent unnecessary rendering/changes\r\n * The hook deemed the new config dep !== previous config dep, hence invoking `setOptions`.\r\n * This solution will update options only if they have changed is comparison to the previous values (not object containing them),\r\n *  avoiding uncessary rendering.\r\n * \r\n * @param ref \r\n * @param config \r\n */\r\nexport function useUpdateOptions(ref: React.RefObject<MathViewRef>, config: Partial<MathfieldConfig>) {\r\n  const configRef = useRef(config);\r\n  useLayoutEffect(() => {\r\n    if (!isEqual(configRef.current, config)) {\r\n      ref.current?.setOptions(config);\r\n      configRef.current = config;\r\n    }\r\n  }, [ref, config, configRef]);\r\n  // set options after rendering for first rendering pass, by then the mathfield has mounted and is able to receive it, before it mounted nothing happens\r\n  useEffect(() => {\r\n    ref.current?.setOptions(config);\r\n  }, []);\r\n}\r\n\r\nexport function useEventRegistration(ref: React.RefObject<HTMLElement>, props: MathViewProps) {\r\n  useEffect(() => {\r\n    const node = ref.current;\r\n    if (!node) return\r\n    const fns: { key: string, fn: (customEvent: any) => any }[] = Object.keys(props)\r\n      .filter(key => typeof props[key] === 'function' && FUNCTION_PROPS.indexOf(MAPPING[key] || key) > -1)\r\n      .map(key => {\r\n        return {\r\n          key: FUNCTION_MAPPING[MAPPING[key] || key],\r\n          fn: (...args: any[]) => { props[key](...args) },\r\n        }\r\n      });\r\n\r\n    fns.forEach(({ key, fn }) => {\r\n      node.addEventListener(key, fn);\r\n    });\r\n\r\n    return () => {\r\n      fns.forEach(({ key, fn }) =>\r\n        node.removeEventListener(key, fn),\r\n      );\r\n    };\r\n  }, [ref, props])\r\n}","import { MathfieldElement } from 'mathlive';\r\nimport 'mathlive/dist/mathlive-fonts.css';\r\nimport 'mathlive/dist/mathlive.min';\r\nimport React, { useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { MathViewProps } from './types';\r\nimport { filterConfig, useControlledConfig, useEventRegistration, useUpdateOptions, useValue } from './utils';\r\n\r\nconst MathView = React.forwardRef<MathfieldElement, MathViewProps>((props, ref) => {\r\n  const _ref = useRef<MathfieldElement>(null);\r\n  useImperativeHandle(ref, () => _ref.current!, [_ref]);\r\n  const value = useValue(props, _ref);\r\n  const [config, passProps] = useMemo(() => filterConfig(props), [props]);\r\n  const transformedConfig = useControlledConfig(value, config);\r\n  useEventRegistration(_ref, props);\r\n  useUpdateOptions(_ref, transformedConfig);\r\n\r\n  return (\r\n    <math-field\r\n      {...passProps}\r\n      onFocus={props.onFocus}\r\n      onBlur={props.onBlur}\r\n      onChange={undefined}\r\n      ref={_ref}\r\n    >\r\n      {value}\r\n    </math-field>\r\n  );\r\n});\r\n\r\nexport * from './types';\r\nexport default MathView;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport MathView, { MathViewProps, MathViewRef } from 'react-math-view';\r\n\r\nconst MathWithKeyboard = React.memo((props: MathViewProps) => {\r\n  const ref = useRef<MathViewRef>(null);\r\n  return <MathView\r\n    ref={ref}\r\n    onFocus={() => {\r\n      ref.current?.executeCommand('showVirtualKeyboard');\r\n    }}\r\n    onBlur={() => {\r\n      console.log('caret', ref.current?.caretPoint);\r\n      console.log('value', ref.current?.getValue('spoken'), ref.current?.getValue('latex'));\r\n      ref.current?.executeCommand('hideVirtualKeyboard')\r\n    }}\r\n    onChange={e => console.log('onChange', e.nativeEvent)}\r\n    {...props}\r\n  />\r\n})\r\n\r\nconst MathWithKeyboardButton = React.memo((props: MathViewProps) => {\r\n  const ref = useRef<MathViewRef>(null);\r\n  return (\r\n    <div className=\"inline\">\r\n      <MathView\r\n        onChange={e => console.log('change', e.target)}\r\n        className=\"f1\"\r\n        ref={ref}\r\n        onBlur={() => {\r\n          console.log('caret', ref.current?.caretPoint);\r\n          console.log('value', ref.current?.getValue('spoken'), ref.current?.getValue('latex'));\r\n        }}\r\n        {...props}\r\n      />\r\n      <span onClick={() => ref.current?.executeCommand('toggleVirtualKeyboard')} style={{ width: '21px', marginTop: '4px' }}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"></path></svg></span>\r\n    </div>\r\n  );\r\n})\r\n\r\nconst ControlledMathView = React.memo((props: MathViewProps) => {\r\n  const [value, setValue] = useState(props.value || \"$$d=\\\\sqrt[]{x^2+y^2}$$\");\r\n  const onChange = useCallback((e: React.SyntheticEvent<any, any>) => {\r\n    setValue(e.currentTarget.getValue());\r\n    props.onChange && props.onChange(e);\r\n  }, [props.onChange]);\r\n\r\n  const ref = useRef<MathViewRef>(null);\r\n  useEffect(() => {\r\n    console.log('ControlledMathView value changed', value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <MathView\r\n      {...props}\r\n      ref={ref}\r\n      onChange={onChange}\r\n      value={value}\r\n    />\r\n  )\r\n})\r\n\r\nconst GithubButtons = React.memo(() =>\r\n  <div\r\n    style={{\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      margin: 20,\r\n    }}\r\n  >\r\n    <iframe\r\n      src=\"https://ghbtns.com/github-btn.html?user=ShaMan123&repo=react-math-view&type=star&count=true&size=small\"\r\n      frameBorder=\"0\"\r\n      scrolling=\"0\"\r\n      title=\"GitHub\"\r\n      width={100}\r\n      height={25}\r\n    />\r\n    <iframe\r\n      src=\"https://ghbtns.com/github-btn.html?user=ShaMan123&repo=react-math-view&type=fork&count=true&size=small\"\r\n      frameBorder=\"0\"\r\n      scrolling=\"0\"\r\n      title=\"GitHub\"\r\n      width={100}\r\n      height={25}\r\n    />\r\n  </div>\r\n)\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(\"\\\\beta\");\r\n  const [k, setK] = useState<\"off\" | \"auto\" | \"manual\" | \"onfocus\" | undefined>(\"off\");\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setValue(\"a^2+b^2=c^2\");\r\n      setK(\"onfocus\");\r\n    }, 3500);\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <ControlledMathView\r\n        // /virtualKeyboardTheme=\"material\"\r\n        virtualKeyboardMode=\"onfocus\"\r\n        onKeystroke={(sender, key, event) => {\r\n          console.log('onKeystroke', { sender, key, event });\r\n          return true;\r\n        }}\r\n        onMoveOutOf={(sender, direction) => {\r\n          console.log('onMoveOutOf', { sender, direction });\r\n          return true;\r\n        }}\r\n        onTabOutOf={(sender, direction) => {\r\n          console.log('onTabOutOf', { sender, direction });\r\n          return false;\r\n        }}\r\n        onLoad={(e) => console.log('onLoad', e)}\r\n        onFocus={(e) => console.log('onFocus', e)}\r\n        onBlur={(e) => console.log('onBlur', e)}\r\n        onVirtualKeyboardToggle={(sender, visible, keyboard) => console.log('onVirtualKeyboardToggle', { sender, visible, keyboard })}\r\n        onMathFieldFocus={(sender) => console.log('onMathFieldFocus', sender)}\r\n        onMathFieldBlur={(sender) => console.log('onMathFieldBlur', sender)}\r\n        onContentWillChange={(sender) => console.log('onContentWillChange', sender)}\r\n        onContentDidChange={(sender) => console.log('onContentDidChange', sender)}\r\n        onSelectionWillChange={(sender) => console.log('onSelectionWillChange', sender)}\r\n        onSelectionDidChange={(sender) => console.log('onSelectionDidChange', sender)}\r\n        onUndoStateWillChange={(target, action) => console.log('onUndoStateWillChange', { target, action })}\r\n        onUndoStateDidChange={(target, action) => console.log('onUndoStateDidChange', { target, action })}\r\n        onCommit={(sender) => console.log('onCommit', sender)}\r\n        onModeChange={(sender, mode) => console.log('onModeChange', sender, mode)}\r\n        onReadAloudStatus={(sender) => console.log('onReadAloudStatus', sender)}\r\n        onChange={e => console.log('onChange', e.nativeEvent)}\r\n        onInput={e => console.log('onInput', e.nativeEvent)}\r\n      >\r\n        \\alpha\r\n      </ControlledMathView>\r\n      <MathWithKeyboard value={value} />\r\n      <MathView virtualKeyboardMode={k} className=\"red\">{value}</MathView>\r\n      <p>\r\n        <MathWithKeyboard style={{ backgroundColor: 'blueviolet' }} value=\"\\gamma\" />\r\n        <MathWithKeyboard value=\"\\delta\" />\r\n      </p>\r\n      <MathWithKeyboardButton>{\"x=\\\\frac{-b\\\\pm\\\\sqrt{b ^ 2 - 4ac}}{2a}\"}</MathWithKeyboardButton>\r\n      <h3>Controlled MathView</h3>\r\n      <h4>Controlled MathView with Callback</h4>\r\n      <ControlledMathView virtualKeyboardMode=\"onfocus\" onCommit={(sender) => console.log('onCommit', sender)} />\r\n      <h4>Controlled MathView <strong>without</strong> Callback</h4>\r\n      <ControlledMathView virtualKeyboardMode={k} /*onCommit={(sender) => console.log('onCommit', sender)} */ />\r\n      <h5>check the console for logs</h5>\r\n      <GithubButtons />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}