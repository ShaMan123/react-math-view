{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["MAPPING","className","htmlFor","onMathFieldFocus","onMathFieldBlur","_ref","useRef","useImperativeHandle","ref","value","useMemo","props","renderToString","passProps","Object","prop","computedKey","React","useLayoutEffect","onFocus","onBlur","MathWithKeyboard","current","executeCommand","console","log","caretPoint","getValue","MathWithKeyboardButton","onChange","e","target","onClick","style","width","marginTop","xmlns","viewBox","d","App","useState","setValue","k","setK","useEffect","setTimeout","virtualKeyboardMode","onKeystroke","sender","key","event","onMoveOutOf","direction","onTabOutOf","onVirtualKeyboardToggle","visible","keyboard","onContentWillChange","onContentDidChange","onSelectionWillChange","onSelectionDidChange","onUndoStateWillChange","action","onUndoStateDidChange","onCommit","onModeChange","mode","onReadAloudStatus","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c064399.chunk.js","sourcesContent":["import { MathfieldConfig, MathfieldElement } from 'mathlive';\r\nimport 'mathlive/dist/mathlive-fonts.css';\r\nimport 'mathlive/dist/mathlive.min';\r\nimport React, { PropsWithChildren, useImperativeHandle, useLayoutEffect, useMemo, useRef } from 'react';\r\nimport { renderToString } from 'react-dom/server';\r\n\r\ntype ExcludeKey<K, KeyToExclude> = K extends KeyToExclude ? never : K;\r\ntype ExcludeField<A, KeyToExclude extends keyof A> = { [K in ExcludeKey<keyof A, KeyToExclude>]: A[K] };\r\n\r\nexport declare type MathViewProps = PropsWithChildren<\r\n  Partial<React.HTMLAttributes<MathfieldElement> & ExcludeField<MathfieldConfig, 'virtualKeyboardToggleGlyph' | 'onFocus' | 'onBlur'> &\r\n  {\r\n    /**LaTeX to render, optionally can be passed as child */\r\n    value: string,\r\n    /**Doesn't seem to work */\r\n    virtualKeyboardToggleGlyph: JSX.Element,\r\n    onFocus: React.HTMLAttributes<MathfieldElement>['onFocus'],\r\n    onBlur: React.HTMLAttributes<MathfieldElement>['onBlur'],\r\n    onMathFieldFocus: MathfieldConfig['onFocus'],\r\n    onMathFieldBlur: MathfieldConfig['onBlur']\r\n  }>\r\n>;\r\nexport declare type MathViewRef = MathfieldElement;\r\n\r\ndeclare global {\r\n  /** @internal */\r\n  namespace JSX {\r\n    interface IntrinsicElements {\r\n      'math-field': React.DetailedHTMLProps<React.HTMLAttributes<MathfieldElement>, MathfieldElement>\r\n    }\r\n  }\r\n}\r\n\r\nconst MAPPING = {\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n  onMathFieldFocus: 'onFocus',\r\n  onMathFieldBlur: 'onBlur'\r\n};\r\n\r\nconst MathView = React.forwardRef<MathfieldElement, MathViewProps>((props, ref) => {\r\n  const _ref = useRef<MathfieldElement>(null);\r\n  useImperativeHandle(ref, () => _ref.current!, [_ref]);\r\n\r\n  const value = useMemo(() => props.children ? renderToString(props.children as React.ReactElement)! : props.value!, [props.children, props.value]);\r\n  const passProps = useMemo(() => {\r\n    return Object.keys(props)\r\n      .reduce((acc, key) => {\r\n        const prop = props[key];\r\n        const computedKey = MAPPING[key] || key;\r\n        let value;\r\n        if (React.isValidElement(prop) || (prop instanceof Array && prop.every(React.isValidElement))) {\r\n          value = renderToString(prop as React.ReactElement);\r\n        } else {\r\n          value = prop;\r\n        }\r\n        return { ...acc, [computedKey]: value };\r\n      }, {});\r\n  }, [props]);\r\n  /*\r\n    useLayoutEffect(() => {\r\n      let fns: { key: string, fn: (customEvent: any) => any }[];\r\n      const node = _ref.current;\r\n      if (node) {\r\n        fns = Object.keys(props)\r\n          .filter(key => props[key] instanceof Function)\r\n          .map(key => ({\r\n            key: MAPPING[key] || key,\r\n            fn: (...args: any[]) => { props[key](...args) },\r\n          }));\r\n  \r\n        fns.forEach(({ key, fn }) => {\r\n          node.addEventListener(key, fn);\r\n        });\r\n      }\r\n      return () => {\r\n        if (node) {\r\n          fns.forEach(({ key, fn }) =>\r\n            node.removeEventListener(key, fn),\r\n          );\r\n        }\r\n      };\r\n    }, [passProps]);\r\n  */\r\n  useLayoutEffect(() => {\r\n    _ref.current?.setOptions(passProps);\r\n    _ref.current?.setValue(value);\r\n  }, [_ref, passProps]);\r\n\r\n  return (\r\n    <math-field\r\n      {...passProps}\r\n      onFocus={props.onFocus}\r\n      onBlur={props.onBlur}\r\n      ref={_ref}\r\n    >\r\n      {value}\r\n    </math-field>\r\n  );\r\n});\r\n\r\nexport default MathView;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport MathView, { MathViewProps, MathViewRef } from 'react-math-view';\r\n\r\nconst MathWithKeyboard = (props: MathViewProps) => {\r\n  const ref = useRef<MathViewRef>(null);\r\n  return <MathView\r\n    ref={ref}\r\n    onFocus={() => {\r\n      ref.current?.executeCommand('showVirtualKeyboard');\r\n    }}\r\n    onBlur={() => {\r\n      console.log('caret', ref.current?.caretPoint);\r\n      console.log('value', ref.current?.getValue('spoken'), ref.current?.getValue('latex'));\r\n      ref.current?.executeCommand('hideVirtualKeyboard')\r\n    }}\r\n    {...props}\r\n  />\r\n}\r\n\r\nconst MathWithKeyboardButton = (props: MathViewProps) => {\r\n  const ref = useRef<MathViewRef>(null);\r\n  return (\r\n    <div className=\"inline\">\r\n      <MathView\r\n        onChange={e => console.log('change', e.target)}\r\n        className=\"f1\"\r\n        ref={ref}\r\n        onBlur={() => {\r\n          console.log('caret', ref.current?.caretPoint);\r\n          console.log('value', ref.current?.getValue('spoken'), ref.current?.getValue('latex'));\r\n        }}\r\n        {...props}\r\n      />\r\n      <span onClick={() => ref.current?.executeCommand('toggleVirtualKeyboard')} style={{ width: '21px', marginTop: '4px' }}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"></path></svg></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(\"\\\\beta\");\r\n  const [k, setK] = useState<\"off\" | \"auto\" | \"manual\" | \"onfocus\" | undefined>(\"off\");\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setValue(\"a^2+b^2=c^2\");\r\n      setK(\"onfocus\");\r\n    }, 1500);\r\n  })\r\n  return <div>\r\n    <MathView\r\n      // /virtualKeyboardTheme=\"material\"\r\n      virtualKeyboardMode=\"onfocus\"\r\n      onKeystroke={(sender, key, event) => {\r\n        console.log('onKeystroke', { sender, key, event });\r\n        return true;\r\n      }}\r\n      onMoveOutOf={(sender, direction) => {\r\n        console.log('onMoveOutOf', { sender, direction });\r\n        return true;\r\n      }}\r\n      onTabOutOf={(sender, direction) => {\r\n        console.log('onTabOutOf', { sender, direction });\r\n        return false;\r\n      }}\r\n      onFocus={(e) => console.log('onFocus', e)}\r\n      onBlur={(e) => console.log('onBlur', e)}\r\n      onVirtualKeyboardToggle={(sender, visible, keyboard) => console.log('onVirtualKeyboardToggle', { sender, visible, keyboard })}\r\n      onMathFieldFocus={(sender) => console.log('onMathFieldFocus', sender)}\r\n      onMathFieldBlur={(sender) => console.log('onMathFieldBlur', sender)}\r\n      onContentWillChange={(sender) => console.log('onContentWillChange', sender)}\r\n      onContentDidChange={(sender) => console.log('onContentDidChange', sender)}\r\n      onSelectionWillChange={(sender) => console.log('onSelectionWillChange', sender)}\r\n      onSelectionDidChange={(sender) => console.log('onSelectionDidChange', sender)}\r\n      onUndoStateWillChange={(target, action) => console.log('onUndoStateWillChange', { target, action })}\r\n      onUndoStateDidChange={(target, action) => console.log('onUndoStateDidChange', { target, action })}\r\n      onCommit={(sender) => console.log('onCommit', sender)}\r\n      onModeChange={(sender, mode) => console.log('onFonModeChangeocus', sender, mode)}\r\n      onReadAloudStatus={(sender) => console.log('onReadAloudStatus', sender)}\r\n    >\r\n      \\alpha\r\n      </MathView>\r\n    <MathWithKeyboard value={value} />\r\n    <MathView virtualKeyboardMode={k} className=\"red\">{value}</MathView>\r\n    <p>\r\n      <MathWithKeyboard style={{ backgroundColor: 'blueviolet' }} value=\"\\gamma\" />\r\n      <MathWithKeyboard value=\"\\delta\" />\r\n    </p>\r\n    <MathWithKeyboardButton>{\"x=\\\\frac{-b\\\\pm\\\\sqrt{b ^ 2 - 4ac}}{2a}\"}</MathWithKeyboardButton>\r\n  </div >\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}