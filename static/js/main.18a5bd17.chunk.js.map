{"version":3,"sources":["../../src/utils.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["OPTIONS","FUNCTION_MAPPING","onChange","onInput","onMathFieldFocus","onMathFieldBlur","onCommit","onError","onKeystroke","onModeChange","onMoveOutOf","onReadAloudStatus","onSelectionWillChange","onUndoStateDidChange","onUndoStateWillChange","onVirtualKeyboardToggle","FUNCTION_PROPS","Object","MAPPING","className","htmlFor","_ref","useRef","useImperativeHandle","ref","value","useMemo","props","renderToString","config","passProps","key","React","filterConfig","useEffect","node","fns","fn","useEventRegistration","configRef","useLayoutEffect","isEqual","useUpdateOptions","onFocus","onBlur","undefined","MathWithKeyboard","current","executeCommand","console","log","caretPoint","getValue","e","nativeEvent","MathWithKeyboardButton","target","onClick","style","width","marginTop","xmlns","viewBox","d","ControlledMathView","useState","setValue","useCallback","currentTarget","WithSetOptions","t","setInterval","setOptions","clearInterval","App","k","setK","setTimeout","enabled","setEnabled","position","right","margin","src","frameborder","scrolling","height","title","virtualKeyboardMode","sender","event","direction","onTabOutOf","onLoad","visible","keyboard","onContentWillChange","onContentDidChange","onSelectionDidChange","action","mode","backgroundColor","ignoreSpacebarInMathMode","textDecoration","href","id","type","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18a5bd17.chunk.js","sourcesContent":["import isEqual from 'lodash.isequal';\r\nimport { MathfieldConfig } from \"mathlive\";\r\nimport React, { useEffect, useLayoutEffect, useRef } from \"react\";\r\nimport { renderToString } from \"react-dom/server\";\r\nimport { MathViewProps, MathViewRef } from \"./types\";\r\n\r\nexport const OPTIONS: Array<keyof MathfieldConfig> = [\r\n  \"createHTML\",\r\n  \"customVirtualKeyboardLayers\",\r\n  \"customVirtualKeyboards\",\r\n  \"defaultMode\",\r\n  \"fontsDirectory\",\r\n  \"horizontalSpacingScale\",\r\n  \"ignoreSpacebarInMathMode\",\r\n  \"inlineShortcutTimeout\",\r\n  \"inlineShortcuts\",\r\n  \"keybindings\",\r\n  \"keypressSound\",\r\n  \"keypressVibration\",\r\n  \"letterShapeStyle\",\r\n  \"locale\",\r\n  \"macros\",\r\n  \"namespace\",\r\n  \"onBlur\",\r\n  \"onCommit\",\r\n  \"onContentDidChange\",\r\n  \"onContentWillChange\",\r\n  \"onError\",\r\n  \"onFocus\",\r\n  \"onKeystroke\",\r\n  \"onModeChange\",\r\n  \"onMoveOutOf\",\r\n  \"onReadAloudStatus\",\r\n  \"onSelectionDidChange\",\r\n  \"onSelectionWillChange\",\r\n  \"onTabOutOf\",\r\n  \"onUndoStateDidChange\",\r\n  \"onUndoStateWillChange\",\r\n  \"onVirtualKeyboardToggle\",\r\n  \"overrideDefaultInlineShortcuts\",\r\n  \"plonkSound\",\r\n  \"readAloudHook\",\r\n  \"readOnly\",\r\n  \"removeExtraneousParentheses\",\r\n  \"scriptDepth\",\r\n  \"smartFence\",\r\n  \"smartMode\",\r\n  \"smartSuperscript\",\r\n  \"speakHook\",\r\n  \"speechEngine\",\r\n  \"speechEngineRate\",\r\n  \"speechEngineVoice\",\r\n  \"strings\",\r\n  \"substituteTextArea\",\r\n  \"textToSpeechMarkup\",\r\n  \"textToSpeechRules\",\r\n  \"textToSpeechRulesOptions\",\r\n  \"virtualKeyboardLayout\",\r\n  \"virtualKeyboardMode\",\r\n  \"virtualKeyboardTheme\",\r\n  \"virtualKeyboardToggleGlyph\",\r\n  \"virtualKeyboards\",\r\n];\r\n\r\n/**\r\n * mount/unmount are unhandled\r\n */\r\nconst FUNCTION_MAPPING = {\r\n  /**retargeting onChange to fire input events to match react expected behavior */\r\n  onChange: 'input',\r\n  onInput: 'input',\r\n  /**rename onFocus to prevent name collision */\r\n  onMathFieldFocus: 'focus',\r\n  /**rename onBlur to prevent name collision */\r\n  onMathFieldBlur: 'blur',\r\n  onCommit: 'change',\r\n  //onContentDidChange,\r\n  //onContentWillChange,\r\n  onError: 'math-error',\r\n  onKeystroke: 'keystroke',\r\n  onModeChange: 'mode-change',\r\n  onMoveOutOf: 'focus-out',\r\n  onReadAloudStatus: 'read-aloud-status',\r\n  //onSelectionDidChange: 'selection-did-change',\r\n  onSelectionWillChange: 'selection-will-change',\r\n  //onTabOutOf,\r\n  onUndoStateDidChange: 'undo-state-did-change',\r\n  onUndoStateWillChange: 'undo-state-will-change',\r\n  onVirtualKeyboardToggle: 'virtual-keyboard-toggle',\r\n};\r\n\r\nconst FUNCTION_PROPS = Object.keys(FUNCTION_MAPPING);\r\n\r\nconst MAPPING = {\r\n  className: 'class',\r\n  htmlFor: 'for',\r\n};\r\n\r\nexport function filterConfig(props: MathViewProps) {\r\n  const config: Partial<MathfieldConfig> = {};\r\n  const passProps: MathViewProps = {};\r\n  for (const _key in props) {\r\n    const key = MAPPING[_key] || _key;\r\n    let value = props[_key];\r\n    if (FUNCTION_PROPS.indexOf(key) > -1) {\r\n      //  handled by attaching event listeners\r\n    } else if (OPTIONS.indexOf(key) > -1) {\r\n      if (React.isValidElement(value) || (value instanceof Array && value.every(React.isValidElement))) {\r\n        value = renderToString(value as React.ReactElement);\r\n      }\r\n      config[key] = value;\r\n    } else {\r\n      passProps[key] = value;\r\n    }\r\n  }\r\n  return [config, passProps] as [typeof config, typeof passProps];\r\n}\r\n\r\n/**\r\n * Performance Optimization\r\n * ------------------------\r\n * This hook memoizes config in order to prevent unnecessary rendering/changes\r\n * The hook deemed the new config dep !== previous config dep, hence invoking `setOptions`.\r\n * This solution will update options only if they have changed is comparison to the previous values (not object containing them),\r\n *  avoiding uncessary rendering.\r\n * \r\n * @param ref \r\n * @param config \r\n */\r\nexport function useUpdateOptions(ref: React.RefObject<MathViewRef>, config: Partial<MathfieldConfig>) {\r\n  const configRef = useRef(config);\r\n  useLayoutEffect(() => {\r\n    if (!isEqual(configRef.current, config)) {\r\n      ref.current?.setOptions(config);\r\n      configRef.current = config;\r\n    }\r\n  }, [ref, config, configRef]);\r\n  // set options after rendering for first rendering pass, by then the mathfield has mounted and is able to receive it, before it mounted nothing happens\r\n  useEffect(() => {\r\n    ref.current?.setOptions(config);\r\n  }, []);\r\n}\r\n\r\nexport function useEventRegistration(ref: React.RefObject<HTMLElement>, props: MathViewProps) {\r\n  useEffect(() => {\r\n    const node = ref.current;\r\n    if (!node) return\r\n    const fns: { key: string, fn: (customEvent: any) => any }[] = Object.keys(props)\r\n      .filter(key => typeof props[key] === 'function' && FUNCTION_PROPS.indexOf(MAPPING[key] || key) > -1)\r\n      .map(key => {\r\n        return {\r\n          key: FUNCTION_MAPPING[MAPPING[key] || key],\r\n          fn: (...args: any[]) => { props[key](...args) },\r\n        }\r\n      });\r\n\r\n    fns.forEach(({ key, fn }) => {\r\n      node.addEventListener(key, fn);\r\n    });\r\n\r\n    return () => {\r\n      fns.forEach(({ key, fn }) =>\r\n        node.removeEventListener(key, fn),\r\n      );\r\n    };\r\n  }, [ref, props])\r\n}","import { MathfieldElement } from 'mathlive';\r\nimport 'mathlive/dist/mathlive-fonts.css';\r\nimport 'mathlive/dist/mathlive.min';\r\nimport React, { useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { renderToString } from 'react-dom/server';\r\nimport { MathViewProps } from './types';\r\nimport { filterConfig, useEventRegistration, useUpdateOptions } from './utils';\r\n\r\nconst MathView = React.forwardRef<MathfieldElement, MathViewProps>((props, ref) => {\r\n  const _ref = useRef<MathfieldElement>(null);\r\n  useImperativeHandle(ref, () => _ref.current!, [_ref]);\r\n  const value = useMemo(() =>\r\n    props.children ?\r\n      renderToString(props.children as React.ReactElement)! :\r\n      props.value || \"\",\r\n    [props.children, props.value]\r\n  );\r\n  const [config, passProps] = useMemo(() => filterConfig(props), [props]);\r\n  useEventRegistration(_ref, props);\r\n  useUpdateOptions(_ref, config);\r\n  useEffect(() => {\r\n    _ref.current?.setValue(value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <math-field\r\n      {...passProps}\r\n      onFocus={props.onFocus}\r\n      onBlur={props.onBlur}\r\n      onChange={undefined}\r\n      ref={_ref}\r\n    >\r\n      {value}\r\n    </math-field>\r\n  );\r\n});\r\n\r\nexport * from './types';\r\nexport default MathView;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport MathView, { MathViewProps, MathViewRef } from 'react-math-view';\r\n\r\nconst MathWithKeyboard = (props: MathViewProps) => {\r\n  const ref = useRef<MathViewRef>(null);\r\n  return <MathView\r\n    ref={ref}\r\n    onFocus={() => {\r\n      ref.current?.executeCommand('showVirtualKeyboard');\r\n    }}\r\n    onBlur={() => {\r\n      console.log('caret', ref.current?.caretPoint);\r\n      console.log('value', ref.current?.getValue('spoken'), ref.current?.getValue('latex'));\r\n      ref.current?.executeCommand('hideVirtualKeyboard')\r\n    }}\r\n    onChange={e => console.log('onChange', e.nativeEvent)}\r\n    {...props}\r\n  />\r\n}\r\n\r\nconst MathWithKeyboardButton = (props: MathViewProps) => {\r\n  const ref = useRef<MathViewRef>(null);\r\n  return (\r\n    <div className=\"inline\">\r\n      <MathView\r\n        onChange={e => console.log('change', e.target)}\r\n        className=\"f1\"\r\n        ref={ref}\r\n        onBlur={() => {\r\n          console.log('caret', ref.current?.caretPoint);\r\n          console.log('value', ref.current?.getValue('spoken'), ref.current?.getValue('latex'));\r\n        }}\r\n        {...props}\r\n      />\r\n      <span onClick={() => ref.current?.executeCommand('toggleVirtualKeyboard')} style={{ width: '21px', marginTop: '4px' }}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm16 336c0 8.823-7.177 16-16 16H48c-8.823 0-16-7.177-16-16V112c0-8.823 7.177-16 16-16h480c8.823 0 16 7.177 16 16v288zM168 268v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-336 80v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm384 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zM120 188v-24c0-6.627-5.373-12-12-12H84c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm96 0v-24c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12zm-96 152v-8c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v8c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"></path></svg></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ControlledMathView = (props: MathViewProps) => {\r\n  const [value, setValue] = useState(props.value || \"$$d=\\\\sqrt[]{x^2+y^2}$$\");\r\n  const onChange = useCallback((e: React.SyntheticEvent<any, any>) => {\r\n    setValue(e.currentTarget.getValue());\r\n    props.onChange && props.onChange(e);\r\n  }, [props.onChange]);\r\n\r\n  const ref = useRef<MathViewRef>(null);\r\n  useEffect(() => {\r\n    console.log('ControlledMathView value changed', value);\r\n  }, [value]);\r\n\r\n\r\n\r\n  return (\r\n    <MathView\r\n      {...props}\r\n      ref={ref}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  )\r\n}\r\n\r\nconst WithSetOptions = (props: MathViewProps) => {\r\n  const ref = useRef<MathViewRef>(null);\r\n  useEffect(() => {\r\n    const t = setInterval(() => ref.current?.setOptions({}), 1000);\r\n    return () => clearInterval(t)\r\n  });\r\n  return <MathView {...props} ref={ref} />\r\n}\r\n\r\nconst App = () => {\r\n  const [value, setValue] = useState(\"\\\\beta\");\r\n  const [k, setK] = useState<\"off\" | \"auto\" | \"manual\" | \"onfocus\" | undefined>(\"off\");\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setValue(\"a^2+b^2=c^2\");\r\n      setK(\"onfocus\");\r\n    }, 1500);\r\n  })\r\n  const [enabled, setEnabled] = useState(true);\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          right: 0,\r\n          margin: 20\r\n        }}\r\n      >\r\n        <iframe\r\n          src=\"https://ghbtns.com/github-btn.html?user=ShaMan123&repo=react-math-view&type=star&count=true&size=large\"\r\n          frameborder=\"0\"\r\n          scrolling=\"0\"\r\n          width=\"150\"\r\n          height=\"30\"\r\n          title=\"GitHub\"\r\n        />\r\n        <iframe\r\n          src=\"https://ghbtns.com/github-btn.html?user=ShaMan123&repo=react-math-view&type=fork&count=true&size=large\"\r\n          frameborder=\"0\"\r\n          scrolling=\"0\"\r\n          width=\"150\"\r\n          height=\"30\"\r\n          title=\"GitHub\"\r\n        />\r\n      </div>\r\n      <ControlledMathView\r\n        // /virtualKeyboardTheme=\"material\"\r\n        virtualKeyboardMode=\"onfocus\"\r\n        onKeystroke={(sender, key, event) => {\r\n          console.log('onKeystroke', { sender, key, event });\r\n          return true;\r\n        }}\r\n        onMoveOutOf={(sender, direction) => {\r\n          console.log('onMoveOutOf', { sender, direction });\r\n          return true;\r\n        }}\r\n        onTabOutOf={(sender, direction) => {\r\n          console.log('onTabOutOf', { sender, direction });\r\n          return false;\r\n        }}\r\n        onLoad={(e) => console.log('onLoad', e)}\r\n        onFocus={(e) => console.log('onFocus', e)}\r\n        onBlur={(e) => console.log('onBlur', e)}\r\n        onVirtualKeyboardToggle={(sender, visible, keyboard) => console.log('onVirtualKeyboardToggle', { sender, visible, keyboard })}\r\n        onMathFieldFocus={(sender) => console.log('onMathFieldFocus', sender)}\r\n        onMathFieldBlur={(sender) => console.log('onMathFieldBlur', sender)}\r\n        onContentWillChange={(sender) => console.log('onContentWillChange', sender)}\r\n        onContentDidChange={(sender) => console.log('onContentDidChange', sender)}\r\n        onSelectionWillChange={(sender) => console.log('onSelectionWillChange', sender)}\r\n        onSelectionDidChange={(sender) => console.log('onSelectionDidChange', sender)}\r\n        onUndoStateWillChange={(target, action) => console.log('onUndoStateWillChange', { target, action })}\r\n        onUndoStateDidChange={(target, action) => console.log('onUndoStateDidChange', { target, action })}\r\n        onCommit={(sender) => console.log('onCommit', sender)}\r\n        onModeChange={(sender, mode) => console.log('onModeChange', sender, mode)}\r\n        onReadAloudStatus={(sender) => console.log('onReadAloudStatus', sender)}\r\n        onChange={e => console.log('onChange', e.nativeEvent)}\r\n        onInput={e => console.log('onInput', e.nativeEvent)}\r\n      >\r\n        \\alpha\r\n      </ControlledMathView>\r\n      <MathWithKeyboard value={value} />\r\n      <MathView virtualKeyboardMode={k} className=\"red\">{value}</MathView>\r\n      <p>\r\n        <MathWithKeyboard style={{ backgroundColor: 'blueviolet' }} value=\"\\gamma\" />\r\n        <MathWithKeyboard ignoreSpacebarInMathMode={false} value=\"\\delta\" />\r\n      </p>\r\n      <MathWithKeyboardButton>{\"x=\\\\frac{-b\\\\pm\\\\sqrt{b ^ 2 - 4ac}}{2a}\"}</MathWithKeyboardButton>\r\n      <div style={{ margin: 50 }}>\r\n        <div>ControlledMathView with Callback</div>\r\n        <ControlledMathView virtualKeyboardMode=\"onfocus\" onCommit={(sender) => console.log('onCommit', sender)} />\r\n        <div>ControlledMathView <strong>without</strong> Callback</div>\r\n        <ControlledMathView virtualKeyboardMode={k} /*onCommit={(sender) => console.log('onCommit', sender)} */ />\r\n        <strong>check the console for logs</strong>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <span style={{ textDecoration: 'line-through' }}>\r\n            issue <a href=\"https://github.com/arnog/react-mathlive/issues/4\" target=\"_blank\"><strong>#4</strong></a>\r\n          </span>\r\n          <br />\r\n          <strong>RESOLVED!</strong>\r\n        </div>\r\n        <label htmlFor=\"@\">toggle to test how caret is affected</label>\r\n        <input id=\"@\" type=\"checkbox\" checked={enabled} onChange={e => setEnabled(e.currentTarget.checked)} />\r\n        {enabled ? <WithSetOptions value={value} /> : <MathView value={value} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}